# Use Python base image with Debian
FROM python:3.9-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    netcat-openbsd \
    && rm -rf /var/lib/apt/lists/*

# Set working directory in the container
WORKDIR /app

# Install Python dependencies
COPY requirements.txt /app/
RUN pip install --upgrade pip && pip install -r requirements.txt

# Copy the application code into the container
COPY . /app/

# Build arguments 
ARG AT_USER
ARG AT_API_KEY
ARG TC4A_DB_NAME
ARG TC4A_DB_USER
ARG TC4A_DB_PASSWORD
ARG TC4A_DB_HOST
ARG TC4A_DB_PORT
ARG FIREBASE_TYPE
ARG FIREBASE_PROJECT_ID
ARG FIREBASE_PRIVATE_KEY_ID
ARG FIREBASE_PRIVATE_KEY
ARG FIREBASE_CLIENT_EMAIL
ARG FIREBASE_CLIENT_ID
ARG FIREBASE_AUTH_URI
ARG FIREBASE_TOKEN_URI
ARG FIREBASE_AUTH_PROVIDER_X509_CERT_URL
ARG FIREBASE_CLIENT_X509_CERT_URL

# Set environment variables based on build arguments
ENV AT_USER=${AT_USER}
ENV AT_API_KEY=${AT_API_KEY}
ENV TC4A_DB_NAME=${TC4A_DB_NAME}
ENV TC4A_DB_USER=${TC4A_DB_USER}
ENV TC4A_DB_PASSWORD=${TC4A_DB_PASSWORD}
ENV TC4A_DB_HOST=${TC4A_DB_HOST}
ENV TC4A_DB_PORT=${TC4A_DB_PORT}
ENV FIREBASE_TYPE=${FIREBASE_TYPE}
ENV FIREBASE_PROJECT_ID=${FIREBASE_PROJECT_ID}
ENV FIREBASE_PRIVATE_KEY_ID=${FIREBASE_PRIVATE_KEY_ID}
ENV FIREBASE_PRIVATE_KEY=${FIREBASE_PRIVATE_KEY}
ENV FIREBASE_CLIENT_EMAIL=${FIREBASE_CLIENT_EMAIL}
ENV FIREBASE_CLIENT_ID=${FIREBASE_CLIENT_ID}
ENV FIREBASE_AUTH_URI=${FIREBASE_AUTH_URI}
ENV FIREBASE_TOKEN_URI=${FIREBASE_TOKEN_URI}
ENV FIREBASE_AUTH_PROVIDER_X509_CERT_URL=${FIREBASE_AUTH_PROVIDER_X509_CERT_URL}
ENV FIREBASE_CLIENT_X509_CERT_URL=${FIREBASE_CLIENT_X509_CERT_URL}

# Expose port 8000
EXPOSE 8000

# Run Django server using Gunicorn
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "tc4a.wsgi:application"]
